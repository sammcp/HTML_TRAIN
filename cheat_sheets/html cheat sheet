HTML Cheat Sheet 

Name vs id 
    name is used when sending data in a form submission, such as <input> and <select> as that's the identifier used in the POST or GET call
    That happend on form submission 

    use id attributes whenever you need to address a particular HTML element with CSS, Javascript ot a fragment identifier.

**useful tags-----------------------------------------------------------
<!DOCTYPE html> - should go at the start
<html en="en"> - start of html 
<title> - states the title of your page (what appears in the tab at the top)
<link rel="icon" type="image/x-icon" href="source"> - puts a favicon in the title (the little image by the title)
<p> - paragraph
<hX> - where x is 1 to 6 - heading 
<header> - top of the page 
<body> - body of the page
<div> - divider
<img src = "source" alt="some text or another image"> - defines a image
<a href="url"> - defines a link (you may use <img> inbetween the <a> and </a> to create a link via clicking on the image)
    use <a href="url" target="_xxx"> tochange how the link opens 
    _self - Default. Opens the document in the same window/tab as it was clicked
    _blank - Opens the document in a new window or tab
    _parent - Opens the document in the parent frame
    _top - Opens the document in the full body of the window

<picture> - better than <img>
<map> - used to make image maps 
**Breaks-----------------------------------------------
<br> - line break 
<hr> = horixontal line 

**Style-----------------------------------------------
<p style="property:value;"> style can be used to add css to an HTML tag (Includes body, header, text etc)
    color
    font-family
    font-size
    text-align

<p Title="Title goes here"> the text in the title = appers when the element is hovered over

**Formatting Elements-------------------------------------------
    <b> - Bold text
    <strong> - Important text
    <i> - Italic text
    <em> - Emphasized text
    <mark> - Marked text
    <small> - Smaller text
    <del> - Deleted text
    <ins> - Inserted text
    <sub> - Subscript text
    <sup> - Superscript text
    used as such <b> bold text </b> - can be used inside <p></p>

Other Formatting Elements 
<blockquote> element defines a section that is quoted from another source. Browsers usually indent <blockquote> elements.
<pre> text inbetween the pre elements remains formated how it is typed 
<q> defines a short quotation Browsers normally insert quotation marks around the quotation.

<abbr> tag defines an abbreviation or an acronym, like "HTML", "CSS", "Mr.", "Dr.", "ASAP", "ATM". Marking abbreviations can give useful information to browsers, translation systems and search-engines. (you can use TITLE to have the full text appear when it is hovered over

<address> tag defines the contact information for the author/owner of a document or an article. renders in italic, and browsers will always add a line break before and after the <address> element.

<cite> tag defines the title of a creative work (e.g. a book) text in the <cite> element usually renders in italic.
<bdo> tag is used to override the current text direction for example <bdo dir="rtl">stinky</bdo> will have text go left to right

**Color--------------------------------------------------------(can also be done in CSS) 
You can change the color using 
style = color:red; or 
style = "background-color:red; or
style = border:2px solid red;

color be set as above or using 
rgb(255,99,71)
#ff6347
hsl(9, 100%, 54%)
used in any HTML elements

**image maps--------------------------------------------------------
The HTML <map> tag defines an image map. An image map is an image with clickable areas. The areas are defined with one or more <area> tags.

e.g.
<img src="workplace.jpg" alt="Workplace" usemap="#workmap">

<map name="workmap">
  <area shape="rect" coords="34,44,270,350" alt="Computer" href="computer.htm">
  <area shape="rect" coords="290,172,333,250" alt="Phone" href="phone.htm">
  <area shape="circle" coords="337,300,44" alt="Coffee" href="coffee.htm">
</map>

types of shapes: 
rect - defines a rectangular region
circle - defines a circular region
poly - defines a polygonal region
default - defines the entire region

image maps can also trigger javascript functions: 
<area shape="circle" coords="337,300,44" href="coffee.htm" onclick="myFunction()">

**background images-----------------------------------------------------------------
To add a background image on an HTML element, use the HTML style attribute and the CSS background-image property:
<p style="background-image: url('img_girl.jpg');">

you can also add some cool variables to make it cover the whole page
<style>
body {
  background-image: url('img_girl.jpg');
  background-repeat: no-repeat; //doesn't repeat
  background-attachment: fixed; //determines if a background image scrolls with the rest of the page or is fixed
  background-size: cover; //covers the width of the page
}
</style>

**Picture Element------------------------------------------------------------------
picture allows more flexibility in specifying images in terms of browser and screen width

this picture will appear at first as img_food and as the browser gets smaller will go to img_car and finally img_girl when img_car cannot be displayed 
<picture>
  <source media="(min-width: 650px)" srcset="img_food.jpg">
  <source media="(min-width: 465px)" srcset="img_car.jpg">
  <img src="img_girl.jpg">
</picture>

Note: 
Always specify an <img> element as the last child element of the <picture> element. The <img> element is used by browsers that do not support the <picture> element, or if none of the <source> tags match.

Some browsers or devices may not support all image formats. By using the <picture> element, you can add images of all formats, and the browser will use the first format it recognizes, and ignore any of the following elements.

**Tables--------------------------------------------------------------------------------------------------------
<table style = "width: 60%"> //set the width of the WHOLE TABLE
    <tr style = "height:200px"> //each one of these is a record in the table stands for table row
        <th style = "width:70%">Heading1</th> //th makes table headings (width sets the width of the cell relitive to the table)
        <th>Heading2</th>
    </tr>
    <tr>
        <td>item1</td> //td is an item in the table (table data)
        <td>item2</td>
    </tr>
</table>

table tags
<table>	Defines a table
<th>	Defines a header cell in a table, can be any cell within a table (top or down the left hand side etc)
<tr>	Defines a row in a table
<td>	Defines a cell in a table
<caption>	Defines a table caption
<colgroup>	Specifies a group of one or more columns in a table for formatting
<col>	Specifies column properties for each column within a <colgroup> element
<thead>	Groups the header content in a table (used mainly to differentiate for CSS manipulation)
<tbody>	Groups the body content in a table (used mainly to differentiate for CSS manipulation)
<tfoot>	Groups the footer content in a table (used mainly to differentiate for CSS manipulation)
Table Attributes:
<th colspan="2"> this spans over two columns (Accross)</th> - one column span over two coumns (only affects a single row)
<th rowspan="2"> this spans over two rows (down) </th> - one rows spans over two rows (only affects one column)
you can use both of the above in tandom to have one cell span over multiple rows and columns

colgroups
colgroups can be used to apply the same properties to groups of columns in tables 
for example: 
<table>
  <colgroup>
    <col span="3">
    <col span="2" style="background-color: pink">
  </colgroup>
    will apply the colour pink to the 4th and 5th columns

there are only a few legal CSS properties that can be used as above: 
width property
visibility property
background properties
border properties

Notes:

typical CSS text styling like text align can be used on table cells e.g.
th{
    text-align:left; //centres all the table header text to the centre 
}

you can also use padding to make tables look nice 
th,td{
    padding: 15px; /adds a padding of 15 pixels to all cells 
}

**Lists---------------------------------------------------------------
<ul> - unordered list <li> for list elements
<ol> - ordered list <li> for list elements
<dl> - described list <dt> and <dd> for list elements

you can use various attributes to change the circles or number letters
used to display items for example type="1" for ordered lists shows the list elements as ordered

**HTML Block and Inline Elements and divs----------------------------------------
Every HTML elements has a default display value depending on what type of element it is, there are two display values: block and inline

<Block Element>: 
A block-level element always starts on a new line, and the browsers automatically add some space (a margin) before and after the element.

A block-level element always takes up the full width available (stretches out to the left and right as far as it can).
e.g. <p><div><table>

<Inline Elements>:
An inline element does not start on a new line.
An inline element only takes up as much width as necessary.
e.g. <b><small><img>

the <div> element is often used in conjuction with CSS to style blocks of text
the <span> element is an inline container used to mark up a part of text, or part of a document e.g. <p>my mother has <span style="color:blue;">blue</span> eyes</p>

**HTML Classes and ID's-------------------------------------------------------------

used to style stuff by CSS, stuff with a specific class attribute will get picked up and altered. 

MULTIPLE HTML ELEMENTS CAN HAVE THE SAME CLASS and are refrenced via .

The class attribute is often used to point to a class name in a style sheet. It can also be used by a JavaScript to access and manipulate elements with the specific class name.
e.g. <div class = "city"></div>

will get picked up and have that div change to a tomato color
.city{
    background-color:tomato;
}

Ids on the other hand are unique within the HTML document and are refrenced via #
<h1 id="mainHeader">
is picked up by 
#mainHeader{
    background-color:lightblue;
}

Id's can also be used as links like so 
<a href="#mainHeader">Go Back to the header!</a> 
and can even be used in other pages <a hred = "another_page.html#mainHeader">

**Iframes----------------------------------------------------------------------
An HTML iframe is used to display a web page within a web page

<iframe src="url" name = iframe_name style="height:200px;width:300px;" title="description"></iframe>
you can also change the border and style using CSS

you can also use <a href="urL" target="iframe_name">link</a> to change / set an iframe link

**javascript (briefly)---------------------------------------------------------
can be called using the <Script> tag

**The Head Element-------------------------------------------------------------
The HTML <head> element is a container for the following elements: <title>, <style>, <meta>, <link>, <script>, and <base>

the head element does not appear in the GUI but is used to set meta data such as the title, favicon, links and search engine notes

the <title> element defines the title of the document. The title must be text-only, and it is shown in the browser's title bar or in the page's tab. and used for SE results

The <style> element is used to define style information for a single HTML page in CSS

The <link> element defines the relationship between the current document and an external resource. mostly to link to CSS files etc

he <meta> element is typically used to specify the character set, page description, keywords, author of the document, and viewport settings.

Viewport is the user's visible area of a webpage, it varies with device

for example commonly used settings are: 
<meta name="viewport" content="width=device-width, initial-scale=1.0">

The width=device-width part sets the width of the page to follow the screen-width of the device (which will vary depending on the device).

The initial-scale=1.0 part sets the initial zoom level when the page is first loaded by the browser

The <base> element specifies the base URL and/or target for all relative URLs in a page.

The <base> tag must have either an href or a target attribute present, or both.

There can only be one single <base> element in a document!

**HTML Layout ELements------------------------------------------------------------
HTML Layout elements are used to structure the HTML page

<header> - Defines a header for a document or a section - i.e. introductory content, set of navigational linksm heading elements, logo or icon. There can be multiple headers in one html document but it cannot be placed within a footer, address or another header.
<nav> - Defines a set of navigation links
<section> - Defines a section in a document - A section is a thematic grouping of content, typically with a heading
<article> - Defines an independent, self-contained content - An article should make sense on its own, and it should be possible to distribute it independently from the rest of the web site.
<aside> - Defines content aside from the content (like a sidebar)
<footer> - Defines a footer for a document or a section -i.e. copyright info, related documents / sites, "back to top"
<details> - Defines additional details that the user can open and close on demand
<summary> - Defines a heading for the <details> element
<figure> - tag specifies self contained content like illustrations, disgrams, photos, code listings etc 
<figcaption> - tag specifies a caption for <figure>, it can be the last or first child of a figure element e.g.
<figure>    
    <img>
    <figcaption>Fig1 - your mum</figcaption>
</figure>

**HTML Semantic Elements----------------------------------------------------------
A semantic element clearly describes its meaning to both the browser and the developer.
demantic elements are used to give the text or item the element represents a meaning so that it is easier to read / alter with CSS Etc. Typically it does not provide uniqiue visual effects (for example <h1></h1> increace font size and give the text the role of a header)

Examples of non-semantic elements: <div> and <span> - Tells nothing about its content.

Examples of semantic elements: <form>, <table>, and <article> - Clearly defines its content.

**HTML Best Practices---------------------------------------------------------------

use <!DOCTYPE html>
use lowercase element names
close all "close-able" elements
user lowercase attribute names (I.e. href vs HREF)
always quote attribute values ""
always specify alt, width and height for images
always include the title element and lang attribute
try to close single tag HTML elements e.g. <emta charset="utf-8"/> as it is required for XHTML and XML meta data, especially the charset and viewport
use lowercase file names

**HTML Character Entities------------------------------------------------------------
character entities can be used to display reserved characters in HTML such as > or <
written as &entity_name; or &#entity_number;

<!DOCTYPE> is mandatory
The xmlns attribute in <html> is mandatory
<html>, <head>, <title>, and <body> are mandatory
Elements must always be properly nested
Elements must always be closed
Elements must always be in lowercase
Attribute names must always be in lowercase
Attribute values must always be quoted
Attribute minimization is forbidden

you can also use this for symbols and emojis, for example the euro is &#8364;

it will depend on what charset is used bur normally it is unicdoe UTF-8

non-breaking space: &nbsp is used when you want a space that will not break onto a new line, for example 10 km/h, you want the 10 and the km/h to be on the same line but keep the space

**HTML a note on URLS------------------------------------------------------
URL = Uniform Resource Locator

it follows the syntax rules

scheme://prefix.domain:port/path/filename
scheme - defines the type of Internet service (most common is http or https)
prefix - defines a domain prefix (default for http is www)
domain - defines the Internet domain name (like w3schools.com)
port - defines the port number at the host (default for http is 80)
path - defines a path at the server (If omitted: the root directory of the site)
filename - defines the name of a document or resource

**a note on XHTML----------------------------------------------------------------
XHTML stands for EXtensible HyperText Markup Language
XHTML is a stricter, more XML-based version of HTML
XHTML is HTML defined as an XML application
XHTML is supported by all major browsers

**HTML Forms and User input--------------------------------------------------------
HTML Forms are used to collect user input e.g. from text boxes, buttons, 
it uses the <form> </form> with elements within that such as <input>, which can take many "forms". 

the action attribute in <form> defines the actione to be performed when the form is submitted e.g. action="action_page.php"

the target in <form> attribute specifies where to display the response: 
_blank	The response is displayed in a new window or tab
_self	The response is displayed in the current window
_parent	The response is displayed in the parent frame
_top	The response is displayed in the full body of the window
framename	The response is displayed in a named iframe

The method attribute in <form> specifies the HTTP method to be used when submitting the form data.

The form-data can be sent as URL variables (with method="get") or as HTTP post transaction (with method="post").

The default HTTP method when submitting form data is GET

GET vs POST
Notes on GET:
Appends the form data to the URL, in name/value pairs
NEVER use GET to send sensitive data! (the submitted form data is visible in the URL!)
The length of a URL is limited (2048 characters)
Useful for form submissions where a user wants to bookmark the result
GET is good for non-secure data, like query strings in Google

Notes on POST:
ds the form data inside the body of the HTTP request (the submitted form data is not shown in the URL)
POST has no size limitations, and can be used to send large amounts of data.
Form submissions with POST cannot be bookmarked

The autocomplete in <form> attribute specifies whether a form should have autocomplete on or off.

The novalidate attribute for <form> (true/false) specifies that the form-data (input) should not be validated when submitted.

**Form Elements----------------------------------------------------------------------

Form Elements
<input> - see below
<label> - used to describe the elements of the form, good for screen readers and those that cannot click small areas well
<select> - defines a drop down list
<option> - defines an option that can be selected in the list
<textarea> - The <textarea> element defines a multi-line input field (a text area):
<button> - defines a clickable button
<fieldset> - used to group related data in a form (it puts a box around it)
<legend> - display a caption for the fieldset
<datalist> - The <datalist> element specifies a list of pre-defined options for an <input> element.Uers will see a drop-down list of the pre-defined options as they input data.
<output> - represents the result of a calculation (like performed by a script)
<optgroup> - defines a group of related options in a sropdown


<input> element-----------------------------------------------------------
 
<input type="text">	Displays a single-line text input field
<input type="radio">	Displays a radio button (for selecting one of many choices)
<input type="checkbox">	Displays a checkbox (for selecting zero or more of many choices)
<input type="submit">	Displays a submit button (for submitting the form)
<input type="button">	Displays a clickable button

a list of all types is available here: 
<input type="button">
<input type="checkbox">
<input type="color">
<input type="date">
<input type="datetime-local">
<input type="email">
<input type="file">
<input type="hidden">
<input type="image">
<input type="month">
<input type="number">
<input type="password">
<input type="radio">
<input type="range">
<input type="reset">
<input type="search">
<input type="submit">
<input type="tel">
<input type="text">
<input type="time">
<input type="url">
<input type="week">

<input> is often used in conjucture with <label for="textbox1">label</label> displays the text and it will also point the user towards the input tag it is "for", this must be equal to the id attribute of the corresponding input element. THis helps users with certain disabilities etc

each <input> element should have a name attribute or it will not submit the data

there is also a list of input restrictions that can be defined via attribute
Attribute	Description
checked - Specifies that an input field should be pre-selected when the page loads 
disabled - Specifies that an input field should be disabled
max	Specifies - the maximum value for an input field
maxlength - Specifies the maximum number of character for an input field
min	- Specifies the minimum value for an input field
pattern - Specifies a regular expression to check the input value against
readonly - Specifies that an input field is read only (cannot be changed)
required - Specifies that an input field is required (must be filled out)
size - Specifies the width (in characters) of an input field
step - Specifies the legal number intervals for an input field
value - Specifies the default value for an input field
autofocus - specifies that an input field should automatically get focus when the page loads.


